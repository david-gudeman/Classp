/* BEGIN HEADER */
#ifndef t9_INCLUDE_
#define t9_INCLUDE_

#include <assert.h>
#include <unordered_map>
#include <utility>

#include "classp.h"

// Include files generated by bison
#include "t9.yacc.hh"
#include "location.hh"
#include "position.hh"

namespace t9 {
using std::istream;
using std::ostream;
using classp::classpPrint;
using classp::classpFormat;
using classp::AttributeMap;

// Location and state information from the parser.
typedef location ParseState;

extern ParseState defaultParseState;

class AstNode;
/* BEGIN FORWARD DECLARATIONS */
class A;
class B;
class C;
/* END FORWARD DECLARATIONS */

// Base class for t9 AST nodes
class AstNode : public classp::ClasspNode {
 public:
  string className() override { return "AstNode"; }
  AstNode(ParseState parseState)
    : parseState(parseState) {
    }

  // Write out a bracketed form of this AST from the declared syntax.
  virtual void bracketFormat(std::ostream& out, AstNode* self) {
    assert(false);
  }

  ParseState parseState;
};

/* BEGIN CLASS DEFINITIONS */
class A: public AstNode {
 public:
  string className() override { return "A"; }
  A(ParseState parseState, int a1, vector<int> a4, AttributeMap& keyword_args);
  static A* parse(istream& input, ostream& errors);
  void printMembers(ostream& out) override;

  int a1;
  int a2;
  int a3;
  vector<int> a4;
  bool has_a2 = false;
};

class B: public A {
 public:
  string className() override { return "B"; }
  B(ParseState parseState, int a1, vector<int> a4, int b1, vector<int> b4, AttributeMap& keyword_args);
  void printMembers(ostream& out) override;

  int b1;
  int b2;
  int b3;
  vector<int> b4;
  bool has_b2 = false;
};

class C: public B {
 public:
  string className() override { return "C"; }
  C(ParseState parseState, int a1, vector<int> a4, int b1, vector<int> b4, int c1, vector<int> c4, AttributeMap& keyword_args);
  void printMembers(ostream& out) override;
  void format(ostream& out, int precedence) override;

  int c1;
  int c2;
  int c3;
  vector<int> c4;
  int c5;
  int c6;
  vector<int> c7;
  int c8;
  vector<int> c9;
  bool has_c2 = false;
  bool has_c5 = false;
};
/* END CLASS DEFINITIONS */

}  // namespace t9
#endif // t9_INCLUDE_

/* END HEADER */
