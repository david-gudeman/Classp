@# This file is a part of the Classp parser, formatter, and AST generator.
@# Description: Skeleton header file used to generate class definition headers.
@#
@# Copyright 2015 Google Inc.
@#
@# Licensed under the Apache License, Version 2.0 (the "License");
@# you may not use this file except in compliance with the License.
@# You may obtain a copy of the License at
@#
@#     http://www.apache.org/licenses/LICENSE-2.0
@#
@# Unless required by applicable law or agreed to in writing, software
@# distributed under the License is distributed on an "AS IS" BASIS,
@# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@# See the License for the specific language governing permissions and
@# limitations under the License.
@#
/* BEGIN HEADER */
#ifndef @ModuleNameUpper()@_INCLUDE_
#define @ModuleNameUpper()@_INCLUDE_

#include <assert.h>
#include <unordered_map>
#include <utility>

#include "classp.h"

// Include files generated by bison
#include "@ModuleName()@.yacc.hh"
#include "location.hh"
#include "position.hh"

namespace @NamespaceName()@ {
using std::istream;
using std::ostream;
using classp::classpPrint;
using classp::classpFormat;
using classp::AttributeMap;

// Location and state information from the parser.
typedef location ParseState;

extern ParseState defaultParseState;

class AstNode;
/* BEGIN FORWARD DECLARATIONS */
  @@PrintForwardDeclarations(out);@@
/* END FORWARD DECLARATIONS */

// Base class for @NamespaceName()@ AST nodes
class AstNode : public classp::ClasspNode {
 public:
  string className() override { return "AstNode"; }
  AstNode(ParseState parseState)
    : parseState(parseState) {
    }

  // Write out a bracketed form of this AST from the declared syntax.
  virtual void bracketFormat(std::ostream& out, AstNode* self) {
    assert(false);
  }

  ParseState parseState;
};

/* BEGIN CLASS DEFINITIONS */
  @@PrintClassDefinitions(out);@@
/* END CLASS DEFINITIONS */

}  // namespace @NamespaceName()@
#endif // @ModuleNameUpper()@_INCLUDE_

/* END HEADER */
